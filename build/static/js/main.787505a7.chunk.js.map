{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","addName","value","newName","onChange","e","setNewName","target","newNumber","setNewNumber","type","Filter","searchName","handleSearch","Persons","persons","deletePerson","map","person","name","number","id","onClick","Notification","notification","message","style","fontSize","borderStyle","borderRadius","padding","marginBottom","color","baseUrl","a","axios","delete","response","getAll","get","then","data","create","newObject","post","update","put","App","useState","setPersons","setSearchName","setNotification","personsToShow","length","search","toLowerCase","filter","includes","filterPhoneBook","useEffect","phoneService","initialPersons","preventDefault","newPerson","personFound","find","window","confirm","returnedPerson","catch","err","console","log","concat","setTimeout","dataset","statusText","Error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.787505a7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction PersonForm(props) {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.addName}>\r\n        name\r\n        <input\r\n          value={props.newName}\r\n          onChange={(e) => props.setNewName(e.target.value)}\r\n          />\r\n        number:\r\n        <input\r\n          value={props.newNumber}\r\n          onChange={(e) => props.setNewNumber(e.target.value)}\r\n          />\r\n        <input type=\"submit\" value=\"add\"/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n    <h3>filter shown with:</h3>\r\n  <input\r\n      value={props.searchName}\r\n      onChange={props.handleSearch}\r\n      />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Persons = ({persons, deletePerson}) => {\r\n  return (\r\n      <ul>\r\n    {persons.map((person) =>\r\n      <li key={person.name}>\r\n        {person.name} {person.number}\r\n        <button data-id={person.id} onClick={deletePerson}>Delete</button>\r\n      </li>\r\n    )}\r\n  </ul>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react';\r\n\r\nconst Notification = ({notification}) => {\r\n  if (!notification) {\r\n    return null\r\n  }\r\n  let {message, type} = notification\r\n  let style = {\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n  style.color = type === 'error' ? 'red' : 'green'\r\n\r\n  return (\r\n    <div style={style}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = newObject => {\r\n  const request= axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request= axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`)\r\n  return response\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }\r\n","import { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport phoneService from './services/phonebook'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [notification, setNotification] = useState(null)\n  let personsToShow = searchName.length >= 1 ? filterPhoneBook() : persons\n\n  useEffect(() => {\n    phoneService.getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons);\n    })\n  }, [])\n\n  function filterPhoneBook() {\n    let search = searchName.toLowerCase()\n    return persons.filter(person => person.name.toLowerCase().includes(search))\n  }\n\n  const handleSearch = (e) => {\n    setSearchName(e.target.value)\n  }\n\n  const addName = (e) => {\n    e.preventDefault()\n    let newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    let personFound = persons.find(person => person.name.toLowerCase().includes(newName.toLowerCase()))\n\n    if (personFound) {\n      let result = window.confirm(`Person already in phonebook, replace number with a new one?`)\n      if (result) {\n        phoneService\n        .update(personFound.id, newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id === returnedPerson.id ? returnedPerson : person))\n\n          setNotification({type:'success', message: `Updated ${returnedPerson.name}`})\n        })\n        .catch(err => {\n          console.log(err);\n\n        })\n      }\n    } else {\n      phoneService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotification({message: `Updated ${returnedPerson.name}`, type: 'success'})\n      })\n    }\n    setTimeout(() => {\n      setNotification(null)\n    }, 3000);\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (e) => {\n    e.preventDefault()\n    let id = e.target.dataset.id\n\n    let result = window.confirm('Do you want to delete this contact?')\n    if (result) {\n      phoneService.deletePerson(id)\n      .then(response => {\n        if (!response.statusText === 'OK') throw new Error()\n        setPersons(persons.filter(person => person.id !== +id))\n        setNotification({message: `Deleted contact`, type: 'success'})\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000);\n      })\n      .catch(err => {\n        console.log(err)\n        setNotification({message: `Information for this contact has already been removed from the server`, type: 'error'})\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000);\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}/>\n      <Filter searchName={searchName} handleSearch={handleSearch}/>\n\n      <h3>Add a new Contact</h3>\n      <PersonForm addName={addName} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}